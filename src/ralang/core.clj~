(ns ralang.core
    (:use [clojure.algo.generic.functor :only (fmap)])
    (:require [clojure.edn])
    (:require [rhizome.dot])
    (:require [rhizome.viz])
    (:require [instaparse.core :as insta])
    (:require [clojure.walk :as walk])
    (:gen-class))

(def parser
     (insta/parser (clojure.java.io/resource "parser.bnf")))

(defn look [x]
      (println x)
      (cond
	(number? x) x
	:else (look (x 1))))

(defn -main []
      (def f (parser "age = 20 + (3 - 5)"))
      (insta/visualize f)
      (walk/postwalk #(do (println %) %) f))
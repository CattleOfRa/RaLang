token		::= factor;

space		::= #'\s*';
space_alo	::= #'\s+'; (* At Least One *)
expr		::= expr add term | expr sub term | <space> term <space>;
term		::= term mul factor | term div factor | <space> factor <space>;
factor		::= num | '(' expr ')' | variable;
<int>		::= #'-?\d+';
<float>		::= #'-?\d+\.\d+';
num 		::= int | float;
add 		::= <space> "+" <space>;
sub 		::= <space> "-" <space>;
mul 		::= <space> "*" <space>;
div 		::= <space> "/" <space>;

variable	::= #'\w+' <space> <#'='> <space> expr;
if 		::= "if" <space_alo> eq | gteq | lteq | gt | lt;
else		::= "else";
eq		::= expr "==" expr;
gteq		::= expr ">=" expr;
lteq		::= expr "<=" expr;
gt		::= expr ">" expr;
lt		::= expr "<" expr;